// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String   //hashed!
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  attempts ExamAttempt[]
}

model Exam {
  id        Int      @id @default(autoincrement())
  name      String
  code      String?   // e.g. SSC-CGL-2024
  totalMarks Int
  marksCorrect Float
  marksWrong Float
  marksUnattempted Float
  meta      Json? // optional JSON with subjects, normalization rules
  createdAt DateTime @default(now())
  submissions ExamAttempt[]
}

model ExamAttempt {
  id      Int     @id @default(autoincrement())
  userId  Int     
  examId  Int
  inputType String      // "URL" or "PDF"
  url     String?     @unique   //if provide; unique so only one user can use this
  filePath String?      // if storing uploaded PDF path/S3 key
  rawData  Json?        // parsed Q/A details
  score    Int?
  total    Int?
  correct  Int?
  wrong    Int?
  createdAt DateTime    @default(now())

  user User @relation(fields: [userId], references: [id])
  exam Exam @relation(fields: [examId], references: [id])
}